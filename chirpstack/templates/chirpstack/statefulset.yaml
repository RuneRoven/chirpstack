apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: chirpstack
  namespace: {{ .Values._common.namespace | default "chirpstack" }}
  annotations: 
    "helm.sh/hook-weight": "0"  # Ensure the StatefulSet runs after the job
spec:
  selector:
    matchLabels:
      app: chirpstack 
  serviceName: "chirpstack"
  replicas: 1 
  template:
    metadata:
      labels:
        app: chirpstack
    spec:
      containers:
      - name: chirpstack
        image: "{{ .Values.chirpstack.image.repository }}:{{ .Values.chirpstack.image.tag | default "chirpstack/chirpstack:4" }}"
        args: 
         {{- range .Values.chirpstack.args }}
          - {{ . | quote }}
        {{- end }}
        imagePullPolicy: {{ .Values.chirpstack.image.pullPolicy }}
        env:
          - name: MQTT_BROKER_HOST
            value: "{{ .Values._common.mqtt.host }}:{{ .Values._common.mqtt.port }}"
          - name: REDIS_HOST
          {{- if .Values._common.redis.external.enabled }}
            value: "{{ .Values._common.redis.external.host }}:{{ .Values._common.redis.external.port }}"
          {{- else }}
            value: "redis.{{ .Values._common.namespace }}.svc.cluster.local:{{ .Values.redis.service.port }}"
          {{- end }}
          {{- if .Values._common.postgres.external.enabled }}
          - name: POSTGRESQL_HOST  
            value: "{{ .Values._common.postgres.external.host }}"
          - name: POSTGRESSQL_PORT
            value: {{ .Values._common.postgres.external.port | int | quote }}
          {{- else }}
          - name: POSTGRESQL_HOST  
            value: "postgres.{{ .Values._common.namespace }}.svc.cluster.local"
          - name: POSTGRESSQL_PORT
            value: {{ .Values.postgres.service.port | int | quote }}
          {{- end }}
          - name: MQTT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mqtt-creds
                key: username
          - name: MQTT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mqtt-creds
                key: password
          - name: MQTT_CA_CERT
            valueFrom:
              secretKeyRef:
                name: mqtt-creds
                key: caCert
          - name: MQTT_TLS_CERT
            valueFrom:
              secretKeyRef:
                name: mqtt-creds
                key: tlsCert
          - name: MQTT_TLS_KEY
            valueFrom:
              secretKeyRef:
                name: mqtt-creds
                key: tlsKey
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: db-creds
                key: password
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-creds
                key: password
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: db-creds
                key: role
          - name: CA_CERT
            valueFrom:
              secretKeyRef:
                name: db-creds
                key: caCert
        ports:
        - containerPort: {{ .Values.chirpstack.service.port }}
          name: web
        volumeMounts:
        - name: {{ .Values.chirpstack.volumeMounts.name }}
          mountPath: {{ .Values.chirpstack.volumeMounts.mountPath }}
        - name: cert-volume
          mountPath: /etc/ssl/custom/pgca.pem
          subPath: pgca.pem
          readOnly: true 
        - name: certs-extra
          mountPath: /etc/ssl/custom/extra
          readOnly: true
      volumes: 
      - name: {{ .Values.chirpstack.volumes.name }}
        configMap:
          name: {{ .Values.chirpstack.volumes.configMap.name | default "chirpstack-configuration" }}
      - name: cert-volume
        secret:
          secretName: db-creds
          items:
          - key: caCert
            path: pgca.pem
      - name: certs-extra
        secret:
          secretName: certs
        items: 
        {{- range $key, $path := .Values.certificates }}
        - key: $key
          path: $key
        {{- end }}